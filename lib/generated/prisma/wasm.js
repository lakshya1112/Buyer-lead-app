
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.BuyersScalarFieldEnum = {
  id: 'id',
  fullName: 'fullName',
  email: 'email',
  phone: 'phone',
  city: 'city',
  propertyType: 'propertyType',
  bhk: 'bhk',
  purpose: 'purpose',
  budgetMin: 'budgetMin',
  budgetMax: 'budgetMax',
  timeline: 'timeline',
  source: 'source',
  status: 'status',
  notes: 'notes',
  tags: 'tags',
  ownerId: 'ownerId',
  updatedAt: 'updatedAt'
};

exports.Prisma.Buyer_historyScalarFieldEnum = {
  id: 'id',
  buyerId: 'buyerId',
  changedBy: 'changedBy',
  changedAt: 'changedAt',
  diff: 'diff'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.City = exports.$Enums.City = {
  Chandigarh: 'Chandigarh',
  Mohali: 'Mohali',
  Zirakpur: 'Zirakpur',
  Panchkula: 'Panchkula',
  Other: 'Other'
};

exports.PropertyType = exports.$Enums.PropertyType = {
  Apartment: 'Apartment',
  Villa: 'Villa',
  Plot: 'Plot',
  Office: 'Office',
  Retail: 'Retail'
};

exports.Bhk = exports.$Enums.Bhk = {
  Studio: 'Studio',
  OneBHK: 'OneBHK',
  TwoBHK: 'TwoBHK',
  ThreeBHK: 'ThreeBHK',
  FourBHK: 'FourBHK',
  FivePlusBHK: 'FivePlusBHK'
};

exports.Purpose = exports.$Enums.Purpose = {
  Buy: 'Buy',
  Rent: 'Rent'
};

exports.Timeline = exports.$Enums.Timeline = {
  ReadyToMoveIn: 'ReadyToMoveIn',
  OneToThreeMonths: 'OneToThreeMonths',
  ThreeToSixMonths: 'ThreeToSixMonths',
  Exploring: 'Exploring'
};

exports.Source = exports.$Enums.Source = {
  Website: 'Website',
  Referral: 'Referral',
  WalkIn: 'WalkIn',
  Call: 'Call',
  Other: 'Other'
};

exports.Status = exports.$Enums.Status = {
  New: 'New',
  Qualified: 'Qualified',
  Contacted: 'Contacted',
  Visited: 'Visited',
  Negotiation: 'Negotiation',
  Converted: 'Converted',
  Dropped: 'Dropped'
};

exports.Prisma.ModelName = {
  Account: 'Account',
  Session: 'Session',
  User: 'User',
  VerificationToken: 'VerificationToken',
  buyers: 'buyers',
  buyer_history: 'buyer_history'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\vs code\\eshayank\\buyer-lead-app\\lib\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\vs code\\eshayank\\buyer-lead-app\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// prisma/schema.prisma\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// --- NEXT-AUTH v4 REQUIRED MODELS ---\nmodel Account {\n  id                String  @id @default(cuid())\n  userId            String\n  type              String\n  provider          String\n  providerAccountId String\n  refresh_token     String? @db.Text\n  access_token      String? @db.Text\n  expires_at        Int?\n  token_type        String?\n  scope             String?\n  id_token          String? @db.Text\n  session_state     String?\n  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique\n  userId       String\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel User {\n  id            String    @id @default(cuid())\n  name          String?\n  email         String?   @unique\n  emailVerified DateTime?\n  image         String?\n  accounts      Account[]\n  sessions      Session[]\n  leads         buyers[]\n}\n\nmodel VerificationToken {\n  identifier String\n  token      String   @unique\n  expires    DateTime\n\n  @@unique([identifier, token])\n}\n\n// --- OUR APPLICATION MODELS ---\nenum City {\n  Chandigarh\n  Mohali\n  Zirakpur\n  Panchkula\n  Other\n}\n\nenum PropertyType {\n  Apartment\n  Villa\n  Plot\n  Office\n  Retail\n}\n\nenum Bhk {\n  Studio\n  OneBHK\n  TwoBHK\n  ThreeBHK\n  FourBHK\n  FivePlusBHK\n}\n\nenum Purpose {\n  Buy\n  Rent\n}\n\nenum Timeline {\n  ReadyToMoveIn\n  OneToThreeMonths\n  ThreeToSixMonths\n  Exploring\n}\n\nenum Source {\n  Website\n  Referral\n  WalkIn\n  Call\n  Other\n}\n\nenum Status {\n  New\n  Qualified\n  Contacted\n  Visited\n  Negotiation\n  Converted\n  Dropped\n}\n\nmodel buyers {\n  id           String          @id @default(uuid())\n  fullName     String\n  email        String?\n  phone        String\n  city         City\n  propertyType PropertyType\n  bhk          Bhk?\n  purpose      Purpose\n  budgetMin    Int?\n  budgetMax    Int?\n  timeline     Timeline\n  source       Source\n  status       Status          @default(New)\n  notes        String?\n  tags         String[]\n  ownerId      String\n  updatedAt    DateTime        @updatedAt\n  owner        User            @relation(fields: [ownerId], references: [id])\n  history      buyer_history[]\n\n  @@map(\"buyers\")\n}\n\nmodel buyer_history {\n  id        String   @id @default(uuid())\n  buyerId   String\n  changedBy String\n  changedAt DateTime @default(now())\n  diff      Json\n  buyer     buyers   @relation(fields: [buyerId], references: [id], onDelete: Cascade)\n\n  @@map(\"buyer_history\")\n}\n",
  "inlineSchemaHash": "1656a0466c4dc598e6cc2f88e46d96d807c1dca577a6eb945e7cc39b1d12fa33",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"leads\",\"kind\":\"object\",\"type\":\"buyers\",\"relationName\":\"UserTobuyers\"}],\"dbName\":null},\"VerificationToken\":{\"fields\":[{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"buyers\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"enum\",\"type\":\"City\"},{\"name\":\"propertyType\",\"kind\":\"enum\",\"type\":\"PropertyType\"},{\"name\":\"bhk\",\"kind\":\"enum\",\"type\":\"Bhk\"},{\"name\":\"purpose\",\"kind\":\"enum\",\"type\":\"Purpose\"},{\"name\":\"budgetMin\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"budgetMax\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timeline\",\"kind\":\"enum\",\"type\":\"Timeline\"},{\"name\":\"source\",\"kind\":\"enum\",\"type\":\"Source\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserTobuyers\"},{\"name\":\"history\",\"kind\":\"object\",\"type\":\"buyer_history\",\"relationName\":\"buyer_historyTobuyers\"}],\"dbName\":\"buyers\"},\"buyer_history\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buyerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"changedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"changedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"diff\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"buyer\",\"kind\":\"object\",\"type\":\"buyers\",\"relationName\":\"buyer_historyTobuyers\"}],\"dbName\":\"buyer_history\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

